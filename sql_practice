/*Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters.
Your result cannot contain duplicates.*/
select distinct city from station where right(city,1) in ('a','e','i','o','u');

/*Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u)
as both their first and last characters. Your result cannot contain duplicates.*/

select distinct city from station where right(city,1) in ('a','e','i','o','u') and
left(city,1) in ('a','e','i','o','u');

/*Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.
Input Format*/

select distinct city from station where left(city,1) not in ('a','e','i','o','u');
select distinct city from station where right(city,1) not in ('a','e','i','o','u');

select distinct city from station where (left(city,1) not in ('a','e','i','o','u'))
and (right(city,1) not in ('a','e','i','o','u'));

/*Query the Name of any student in STUDENTS who scored higher than 75 Marks.
Order your output by the last three characters of each name.
If two or more students both have names ending in the same last three characters
(i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.*/

select name from students where marks>75
order by right(name,3),id asc;


/*
Write a query that prints a list of employee names
(i.e.: the name attribute) from the Employee table in alphabetical order.
*/
select name from employee order by name;
select name from employee where salary>2000 and months<10 order by employee_id asc;

/*friend's salary higher*/


Select S.name From (Students S join Friends F Using(ID)
         join Packages p1 on S.id = p1.id
         join Packages p2 on F.friend_id = p2.id)
         where p2.salary>p1.salary
         order by p2.salary
         ;

/*value pair*/

Select distinct f1.x,f1.y from
    (functions f1 join functions f2)
    where f1.x = f2.y and f1.y = f2.x
         ;
